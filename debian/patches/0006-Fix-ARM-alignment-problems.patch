From: Robie Basak <robie.basak@canonical.com>
Date: Sat, 20 Apr 2013 22:05:50 -0300
Subject: Fix ARM alignment problems

This is a temporary workaround. We avoid double alignment issues by using
memcpy to make sure that all doubles are aligned before accessing them.

Last-Update: 2016-02-01
---
 src/mongo/bson/bsonelement.h | 16 +++++++++++++++-
 src/mongo/db/key.cpp         |  2 +-
 2 files changed, 16 insertions(+), 2 deletions(-)

--- a/src/mongo/bson/bsonelement.h
+++ b/src/mongo/bson/bsonelement.h
@@ -29,7 +29,7 @@
 
 #pragma once
 
-#include <string.h>  // strlen
+#include <string.h>  // strlen, memcpy
 #include <string>
 #include <vector>
 
@@ -651,13 +651,27 @@
 }
 
 inline double BSONElement::numberDouble() const {
+#if defined(__arm__)
+    int int_result;
+    long long long_long_result;
+#endif
     switch (type()) {
         case NumberDouble:
             return _numberDouble();
         case NumberInt:
+#if defined(__arm__)
+            memcpy(&int_result, value(), sizeof(int_result));
+            return int_result;
+#else
             return _numberInt();
+#endif
         case NumberLong:
+#if defined(__arm__)
+            memcpy(&long_long_result, value(), sizeof(long_long_result));
+            return (double)(long_long_result);
+#else
             return _numberLong();
+#endif
         default:
             return 0;
     }
--- a/src/mongo/db/storage/mmap_v1/btree/key.cpp
+++ b/src/mongo/db/storage/mmap_v1/btree/key.cpp
@@ -428,7 +428,7 @@
                 p += 8;
                 break;
             case cdouble:
-                b.append("", (double&)*p);
+                b.append("", (reinterpret_cast< const PackedDouble& >(*p)).d);
                 p += sizeof(double);
                 break;
             case cint:
