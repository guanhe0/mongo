#!/bin/sh

set -e

MONGO_VERSION="$(dpkg-parsechangelog -SVersion | sed -r 's/^([0-9]+:)?([0-9]+\.[0-9]+).*/\2/')"

MONGO_PORT="$(echo "$MONGO_VERSION" | awk -F . '{ printf "27%d%02d\n", $1, $2 }')"
MONGOD="/usr/bin/mongod-${MONGO_VERSION} --bind_ip 127.0.0.1 --port $MONGO_PORT"
MONGO_CLIENT="mongo-${MONGO_VERSION} --port $MONGO_PORT"

TIMEOUT=120

if [ -n "$AUTOPKGTEST_TMP" ]; then
    dbpath="$AUTOPKGTEST_TMP"
    logpath="$AUTOPKGTEST_ARTIFACTS/mongod.log"
else
    dbpath="$(mktemp -d)"
    logpath="${dbpath}/mongod.log"
fi

echo " -> Testing MongoDB $MONGO_VERSION"
echo " -> Starting mongod"

$MONGOD --dbpath "$dbpath" --nojournal \
    --fork --pidfilepath "${dbpath}/mongod.pid" \
    --logpath "$logpath"

cleanup() {
    res=$?
    set +e
    echo " -> Shutting down server"
    echo "db.shutdownServer()" | $MONGO_CLIENT --quiet admin >/dev/null
    return $res
}

trap 'cleanup' EXIT

echo -n " -> Waiting for mongod to start: "
count=0
while ! echo 'db.version()' | $MONGO_CLIENT --quiet >/dev/null 2>&1; do
    echo -n "."
    count=$((count+1))
    if test $count -gt $TIMEOUT; then
        echo "    mongod failed to start?"
        pgrep mongod-$MONGO_VERSION
        exit 1
    fi
    sleep 1
done

for testfile in jstests/core/basic*.js; do
    echo
    echo " -> Running $testfile"
    $MONGO_CLIENT --verbose "$testfile" 2>&1
done

echo
echo "=============="
echo "OK"
